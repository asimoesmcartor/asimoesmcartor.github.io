{"version":3,"sources":["components/cards.jsx","Home.jsx","Gallery.jsx","components/canvas_lines.jsx","Projects.jsx","components/nav.jsx","App.jsx","index.jsx"],"names":["Cards","react_default","a","createElement","className","Home","mdbreact_esm","fluid","build","cards","React","Component","Gallery","state","photoIndex","isOpen","images","renderImages","_this","map","imageSrc","privateKey","md","key","classname","onContextMenu","e","preventDefault","effect","src","alt","onClick","setState","_this2","this","_this$state","index_es","mainSrc","nextSrc","length","prevSrc","imageTitle","onCloseRequest","onMovePrevRequest","onMoveNextRequest","CanvasLines","rndPastelColor","Math","round","random","toString","setInterval","canvas","document","querySelector","context","getContext","size","window","innerWidth","dpr","devicePixelRatio","width","height","scale","lineWidth","lines","i","line","j","distanceToCenter","abs","variance","max","point","x","y","push","beginPath","moveTo","xc","yc","quadraticCurveTo","save","globalCompositeOperation","fill","restore","strokeStyle","stroke","boxShadowColor","getElementById","style","boxShadow","id","ref","Projects","canvas_lines","NavMenu","Nav","activeKey","Item","Link","href","to","eventKey","App","loading","Promise","resolve","setTimeout","then","b","baffle","set","speed","characters","reveal","nav","Switch","Route","exact","path","component","rootElement","hasChildNodes","hydrate","BrowserRouter","basename","process","src_App","render"],"mappings":"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","file":"static/js/main.543413e9.chunk.js","sourcesContent":["import React from 'react';\nimport {  MDBRow, MDBCol, MDBCardBody, MDBIcon, MDBBtn, MDBView, MDBMask } from \"mdbreact\";\nimport { Link } from 'react-router-dom';\n\n\n//Loads components later to give time for images to come in.\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\n\n\n\nconst Cards = () => (\n  <section className=\"text-center my-5 picture-box picture-box-border\">\n  <h2 className=\"h1-responsive font-weight-bold my-5\">\n    Things I am working on\n  </h2>\n  <p className=\"grey-text text-left w-responsive mx-auto mb-5\">\n    I built this website using React components to become more familiar with \n    breaking out my projects into components. The Gallery section holds my photos that \n    I have taken around the world. The Projects section holds my web projects that I \n    have been working on over the past few years.\n  </p>\n  \n\n{/*  \n <MDBCol lg=\"6\" md=\"12\" className=\"mb-lg-0 mb-6\">\n      <Link to=\"/gallery\">\n        <MDBView className=\"overlay rounded z-depth-1\" waves>\n          <LazyLoadImage\n            placeholderSrc={process.env.PUBLIC_URL + '/images/preload-images/gallery-9.jpg'}\n            src={process.env.PUBLIC_URL + '/images/gallery-9.jpg'}\n            alt=\"\"\n            effect=\"opacity\"\n            className=\"img-fluid\"\n          />\n            <MDBMask overlay=\"white-slight\" />\n        </MDBView>\n      </Link>\n      <MDBCardBody className=\"pb-0\">\n        <h4 className=\"font-weight-bold my-3\">Photography</h4>\n        <p className=\"grey-text\">\n          Examples of a few photos I have taken around the world.\n        </p>\n        <Link to=\"/gallery\">\n          <MDBBtn gradient=\"blue\" size=\"sm\" className=\"white-text\">\n            <MDBIcon fas icon=\"camera-retro\" className=\"left\" />\n            Gallery\n          </MDBBtn>\n        </Link>\n      </MDBCardBody>\n    </MDBCol>\n    <MDBCol lg=\"6\" md=\"12\" className=\"mb-lg-0 mb-6\">\n      <Link to=\"/projects\">\n        <MDBView className=\"overlay rounded z-depth-1\" waves>\n          <LazyLoadImage\n            placeholderSrc={process.env.PUBLIC_URL + '/images/generativelines.jpg'}\n            src={process.env.PUBLIC_URL + '/images/generativelines.jpg'}\n            alt=\"\"\n            effect=\"opacity\"\n            className=\"img-fluid\"\n          />\n            <MDBMask overlay=\"white-slight\" />\n        </MDBView>\n      </Link>\n      <MDBCardBody className=\"pb-0\">\n        <h4 className=\"font-weight-bold my-3\">Generative Lines</h4>\n        <p className=\"grey-text\">\n          This project I ported a JavaScript based random generated squiggly lines \n          based off of the learnings from p5.\n        </p>\n        <Link to=\"/projects\">\n          <MDBBtn gradient=\"blue\" size=\"sm\" className=\"white-text\">\n            <MDBIcon fas icon=\"pencil-alt\" className=\"left\" />\n            Generative Lines\n          </MDBBtn>\n        </Link>\n      </MDBCardBody>\n    </MDBCol>\n  */}\n\n</section>\n);\n\nexport default Cards;\n","import React from 'react';\nimport { MDBContainer, MDBRow } from \"mdbreact\";\n\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\n\nimport Cards from './components/cards';\n\nclass Home extends React.Component {\n  render() {\n    return (\n        <MDBContainer fluid>\n          <MDBRow>\n          <LazyLoadComponent>\n              <Cards />\n          </LazyLoadComponent>\n          </MDBRow> \n        </MDBContainer>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"./styles/Lightbox.css\";\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\n\n\nclass Gallery extends React.Component {\nstate = {\n  photoIndex: 0,\n  isOpen: false,\n  images: [\n    process.env.PUBLIC_URL + '/images/gallery-1.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-2.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-4.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-5.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-6.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-7.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-8.jpg',\n    process.env.PUBLIC_URL + '/images/gallery-9.jpg'\n  ]\n}\n\nrenderImages = () => {\n  let photoIndex = -1;\n  const { images } = this.state;\n\nreturn images.map(imageSrc => {\n  photoIndex++;\n  const privateKey = photoIndex;\n  return (\n    <MDBCol md=\"4\" key={photoIndex}>\n      <figure classname=\"\" onContextMenu={(e)=> e.preventDefault()}>\n        <LazyLoadImage\n          effect=\"opacity\" \n          src={imageSrc} \n          alt=\"Gallery\"\n          className=\"img-fluid gallery-images\" \n          onClick={()=>\n            this.setState({ photoIndex: privateKey, isOpen: true })\n          }\n        />\n      </figure>\n    </MDBCol>\n    );\n  })\n}\n\nrender() {\nconst { photoIndex, isOpen, images } = this.state;\n  return (\n      <MDBContainer className=\"mt-5\">\n        <div className=\"mdb-lightbox no-margin\">\n          <MDBRow className=\"\">\n            {this.renderImages()}\n          </MDBRow>\n        </div>\n        {isOpen && (\n        <div onContextMenu={(e)=> e.preventDefault()}>\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            imageTitle={photoIndex + 1 + \"/\" + images.length}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n              }\n            />\n          </div>\n        )}\n      </MDBContainer>\n    );\n  }\n}\n\nexport default Gallery;\n","import React from 'react';\n// import { Button } from 'react-bootstrap';\n\nclass CanvasLines extends React.Component {\n  componentDidMount() {\n    //             ╔═╗╔═╗╔╗╔╔═╗╦═╗╔═╗╔╦╗╦╦  ╦╔═╗  ╦  ╦╔╗╔╔═╗╔═╗\n    //             ║ ╦║╣ ║║║║╣ ╠╦╝╠═╣ ║ ║╚╗╔╝║╣   ║  ║║║║║╣ ╚═╗\n    //             ╚═╝╚═╝╝╚╝╚═╝╩╚═╩ ╩ ╩ ╩ ╚╝ ╚═╝  ╩═╝╩╝╚╝╚═╝╚═╝\n\n    // Creates pastel RGB color\n    const pastelColors = () => {\n      let r = (Math.round(Math.random() * 127) + 127).toString(16);\n      let g = (Math.round(Math.random() * 127) + 127).toString(16);\n      let b = (Math.round(Math.random() * 127) + 127).toString(16);\n      return '#' + r + g + b;\n    };\n\n    let rndPastelColor = pastelColors();\n\n    // Creates the Generative Circle with randomized lines\n\n    const generativeCircle = () => {\n      var canvas = document.querySelector('canvas');\n      var context = canvas.getContext('2d');\n\n      const scalingFactor = 6;\n\n      var size = window.innerWidth;\n      var dpr = window.devicePixelRatio / scalingFactor;\n      canvas.width = size * dpr;\n      canvas.height = size * dpr;\n      context.scale(dpr, dpr);\n      context.lineWidth = 2;\n\n      var step = 45;\n      var lines = [];\n\n      for (var i = step; i <= size - step; i += step) {\n        var line = [];\n        for (var j = step; j <= size - step; j += step) {\n          var distanceToCenter = Math.abs(j - size / 2);\n          var variance = Math.max(size / 2 - 50 - distanceToCenter, 0);\n          var random = ((Math.random() * variance) / 2) * -1;\n          var point = { x: j, y: i + random };\n          line.push(point);\n        }\n        lines.push(line);\n      }\n\n      for (var i = 0; i < lines.length; i++) {\n        context.beginPath();\n        context.moveTo(lines[i][0].x, lines[i][0].y);\n\n        for (var j = 0; j < lines[i].length - 2; j++) {\n          var xc = (lines[i][j].x + lines[i][j + 1].x) / 2;\n          var yc = (lines[i][j].y + lines[i][j + 1].y) / 2;\n          context.quadraticCurveTo(lines[i][j].x, lines[i][j].y, xc, yc);\n        }\n\n        context.quadraticCurveTo(\n          lines[i][j].x,\n          lines[i][j].y,\n          lines[i][j + 1].x,\n          lines[i][j + 1].y\n        );\n        context.save();\n        context.globalCompositeOperation = 'destination-out';\n        context.fill();\n        context.restore();\n        context.strokeStyle = rndPastelColor;\n        context.stroke();\n      }\n\n      // Adds shadow behind the circle that matches line color\n      var boxShadowColor = '0px 0px 400px -15px ' + rndPastelColor;\n      document.getElementById('circle-crop').style.boxShadow = boxShadowColor;\n    };\n    setInterval(generativeCircle, 100);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"border\">\n          <div id=\"frame\">\n            <div id=\"circle-crop\">\n              <canvas id=\"lines-circle\" ref=\"canvas\" width={500} height={300} />\n            </div>\n          </div>\n        </div>\n        {/* <Button onClick={this.newColor}>New Color</Button> */}\n      </div>\n    );\n  }\n}\nexport default CanvasLines;\n","import React from 'react';\n\n//p5 Generative Imports\n// import P5Wrapper from 'react-p5-wrapper';\n// import StarApp from './components/starapp';\nimport CanvasLines from './components/canvas_lines';\n\n\nclass Projects extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* <P5Wrapper sketch={StarApp} /> */}\n        {/* <P5Wrapper sketch={GenerativeLinesApp} /> */}\n        <h1>Generative Lines</h1>\n        <CanvasLines />\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n\nconst NavMenu = () => (\n  <Nav className=\"justify-content-end\" activeKey=\"/\">\n    <Nav.Item>\n      <Nav.Link href=\"/\">\n        <Link to=\"/\" >Home</Link>\n      </Nav.Link>\n    </Nav.Item>\n    <Nav.Item>\n      <Nav.Link eventKey=\"/gallery\">\n        <Link to=\"/gallery/\">Gallery</Link>\n      </Nav.Link>\n    </Nav.Item>\n    <Nav.Item>\n      <Nav.Link eventKey=\"/projects\">\n        <Link to=\"/projects/\">Projects</Link>\n      </Nav.Link>\n    </Nav.Item>\n  </Nav>\n);\n\n\nexport default NavMenu;\n","import React, { Component } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from './Home';\nimport Gallery from './Gallery';\nimport Projects from './Projects';\nimport baffle from 'baffle';\n\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\n//Components imports\nimport NavMenu from './components/nav';\n\nfunction demoAsyncCall() {\n  return new Promise((resolve) => setTimeout(() => resolve(), 2500));\n}\n\n\n\nclass App extends Component {\n  state = {\n    loading: false\n  };\n\n  componentDidMount() {\n    // this simulates an async action, after which the component will render the content\n    demoAsyncCall().then(() => this.setState({ loading: false }));\n    let b = baffle('.loading');\n    b.set({\n      speed: 300,\n      characters: '▒░█ >▓//░ █>█░/ ██▒ ▓▓/░/ <▒▓▓ <░█ ░░█▒ ▒<░░',\n    });\n    b.reveal(2500)\n  }\n\n  render() {\n\n    const { loading } = this.state;\n    \n    if(loading) {\n\n      return (\n\n          <MDBContainer className=\"loading-container\">\n            <MDBRow className=\"pt-3 pb-3\">\n              <MDBCol></MDBCol>\n              <MDBCol>\n                <h3 className=\"loading text-center\">Loading...</h3>\n              </MDBCol>\n              <MDBCol></MDBCol>\n            </MDBRow>\n          </MDBContainer>\n      );\n    }\n\n    return (\n        <div className=\"App\">\n          <NavMenu />\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol />\n              <MDBCol size=\"10\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/gallery/\" component={Gallery} />\n                <Route path=\"/projects/\" component={Projects} />\n                <Route component={<div>404 pages not found</div>} />\n              </Switch>\n              </MDBCol>\n              <MDBCol />\n            </MDBRow>\n          </MDBContainer>\n        </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/index.css';\nimport \"./styles/App.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  hydrate(\n  <BrowserRouter\n    basename={ process.env.PUBLIC_URL }\n  >\n    <App />\n  </BrowserRouter>\n  , rootElement);\n} else {\n  render(\n  <BrowserRouter\n    basename={ process.env.PUBLIC_URL }\n  >\n    <App /> \n  </BrowserRouter>\n  , rootElement);\n}\n"],"sourceRoot":""}