{"version":3,"sources":["components/canvas_lines.js","Home.js","Post.js","App.js","index.js"],"names":["CanvasLines","rndPastelColor","Math","round","random","toString","setInterval","canvas","document","querySelector","context","getContext","size","window","innerWidth","dpr","devicePixelRatio","width","height","scale","lineWidth","lines","i","line","j","distanceToCenter","abs","variance","max","point","x","y","push","length","beginPath","moveTo","xc","yc","quadraticCurveTo","save","globalCompositeOperation","fill","restore","strokeStyle","stroke","boxShadowColor","getElementById","style","boxShadow","react_default","a","createElement","id","ref","React","Component","Home","canvas_lines","Post","App","BrowserRouter","className","Container","Row","Col","xs","Switch","Route","exact","path","component","rootElement","hasChildNodes","hydrate","src_App","render"],"mappings":"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","file":"static/js/main.61290629.chunk.js","sourcesContent":["import React from 'react';\n// import { Button } from 'react-bootstrap';\n\nclass CanvasLines extends React.Component {\n  componentDidMount() {\n    //             ╔═╗╔═╗╔╗╔╔═╗╦═╗╔═╗╔╦╗╦╦  ╦╔═╗  ╦  ╦╔╗╔╔═╗╔═╗\n    //             ║ ╦║╣ ║║║║╣ ╠╦╝╠═╣ ║ ║╚╗╔╝║╣   ║  ║║║║║╣ ╚═╗\n    //             ╚═╝╚═╝╝╚╝╚═╝╩╚═╩ ╩ ╩ ╩ ╚╝ ╚═╝  ╩═╝╩╝╚╝╚═╝╚═╝\n\n    // Creates pastel RGB color\n    const pastelColors = () => {\n      let r = (Math.round(Math.random() * 127) + 127).toString(16);\n      let g = (Math.round(Math.random() * 127) + 127).toString(16);\n      let b = (Math.round(Math.random() * 127) + 127).toString(16);\n      return '#' + r + g + b;\n    };\n\n    let rndPastelColor = pastelColors();\n\n    // Creates the Generative Circle with randomized lines\n\n    const generativeCircle = () => {\n      var canvas = document.querySelector('canvas');\n      var context = canvas.getContext('2d');\n\n      const scalingFactor = 6;\n\n      var size = window.innerWidth;\n      var dpr = window.devicePixelRatio / scalingFactor;\n      canvas.width = size * dpr;\n      canvas.height = size * dpr;\n      context.scale(dpr, dpr);\n      context.lineWidth = 2;\n\n      var step = 45;\n      var lines = [];\n\n      for (var i = step; i <= size - step; i += step) {\n        var line = [];\n        for (var j = step; j <= size - step; j += step) {\n          var distanceToCenter = Math.abs(j - size / 2);\n          var variance = Math.max(size / 2 - 50 - distanceToCenter, 0);\n          var random = ((Math.random() * variance) / 2) * -1;\n          var point = { x: j, y: i + random };\n          line.push(point);\n        }\n        lines.push(line);\n      }\n\n      for (var i = 0; i < lines.length; i++) {\n        context.beginPath();\n        context.moveTo(lines[i][0].x, lines[i][0].y);\n\n        for (var j = 0; j < lines[i].length - 2; j++) {\n          var xc = (lines[i][j].x + lines[i][j + 1].x) / 2;\n          var yc = (lines[i][j].y + lines[i][j + 1].y) / 2;\n          context.quadraticCurveTo(lines[i][j].x, lines[i][j].y, xc, yc);\n        }\n\n        context.quadraticCurveTo(\n          lines[i][j].x,\n          lines[i][j].y,\n          lines[i][j + 1].x,\n          lines[i][j + 1].y\n        );\n        context.save();\n        context.globalCompositeOperation = 'destination-out';\n        context.fill();\n        context.restore();\n        context.strokeStyle = rndPastelColor;\n        context.stroke();\n      }\n\n      // Adds shadow behind the circle that matches line color\n      var boxShadowColor = '0px 0px 400px -15px ' + rndPastelColor;\n      document.getElementById('circle-crop').style.boxShadow = boxShadowColor;\n    };\n    setInterval(generativeCircle, 100);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"border\">\n          <div id=\"frame\">\n            <div id=\"circle-crop\">\n              <canvas id=\"lines-circle\" ref=\"canvas\" width={640} height={425} />\n            </div>\n          </div>\n        </div>\n        <h3>Generative Lines</h3>\n        {/* <Button onClick={this.newColor}>New Color</Button> */}\n      </div>\n    );\n  }\n}\nexport default CanvasLines;\n","import React from 'react';\n\n//p5 Generative Imports\n// import P5Wrapper from 'react-p5-wrapper';\n// import StarApp from './components/starapp';\nimport CanvasLines from './components/canvas_lines';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <div>\n        {/* <P5Wrapper sketch={StarApp} /> */}\n        {/* <P5Wrapper sketch={GenerativeLinesApp} /> */}\n        <CanvasLines />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nclass Post extends React.Component {\n  render() {\n    return (\n      <div>\n        <p>Post</p>\n        <p>This is the Post page</p>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './Home';\nimport Post from './Post';\nimport { Container, Row, Col } from 'react-bootstrap';\n\n//Components imports\n// import NavMenu from './components/nav';\n// import Cards from './components/cards';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          {/* <NavMenu /> */}\n\n          <Container>\n            <Row>\n              <Col />\n              <Col xs={6}>\n                {/* <Cards /> */}\n                <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route path=\"/post/\" component={Post} />\n                </Switch>\n              </Col>\n              <Col />\n            </Row>\n          </Container>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/index.css';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n"],"sourceRoot":""}